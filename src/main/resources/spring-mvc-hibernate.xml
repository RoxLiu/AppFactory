<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
       default-lazy-init="false">
	<!-- 自动扫描dao和service包(自动注入) -->
	<context:component-scan base-package="com.ocyd.jeecgframework.core.common.dao.*" />
	<context:component-scan base-package="com.ocyd.appfactory.service.*" />

    <!-- 加载service,此时要排除要controller,因为controller已经spring-mvc中加载过了 -->
    <!--<context:component-scan base-package="org.jeecgframework.web.*,weixin.*">-->
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />-->
    <!--</context:component-scan>-->

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
<!--	&lt;!&ndash; 配置数据源1 &ndash;&gt;
	<bean name="dataSource_jeecg" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url.jeecg}" />
		<property name="username" value="${jdbc.username.jeecg}" />
		<property name="password" value="${jdbc.password.jeecg}" />
		&lt;!&ndash; 初始化连接大小 &ndash;&gt;
		<property name="initialSize" value="0" />
		&lt;!&ndash; 连接池最大使用连接数量 &ndash;&gt;
		<property name="maxActive" value="20" />
		&lt;!&ndash; 连接池最大空闲 &ndash;&gt;
		<property name="maxIdle" value="20" />
		&lt;!&ndash; 连接池最小空闲 &ndash;&gt;
		<property name="minIdle" value="5" />
		&lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;
		<property name="maxWait" value="60000" />
		&lt;!&ndash; <property name="poolPreparedStatements" value="true" /> <property
			name="maxPoolPreparedStatementPerConnectionSize" value="33" /> &ndash;&gt;
		<property name="validationQuery" value="${validationQuery.sqlserver}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		&lt;!&ndash; 打开removeAbandoned功能 &ndash;&gt;
		<property name="removeAbandoned" value="true" />
		&lt;!&ndash; 1800秒，也就是30分钟 &ndash;&gt;
		<property name="removeAbandonedTimeout" value="1800" />
		&lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;
		<property name="logAbandoned" value="true" />

		&lt;!&ndash; 开启Druid的监控统计功能 &ndash;&gt;
		<property name="filters" value="stat" />
		&lt;!&ndash;<property name="filters" value="mergeStat" /> &ndash;&gt;
		&lt;!&ndash; Oracle连接是获取字段注释 &ndash;&gt;
		<property name="connectProperties">
			<props>
				<prop key="remarksReporting">true</prop>
			</props>
		</property>
	</bean>

	&lt;!&ndash; 数据源集合 &ndash;&gt;
	<bean id="dataSource" class="com.ocyd.jeecgframework.core.extend.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="com.ocyd.jeecgframework.core.extend.datasource.DataSourceType">
				<entry key="dataSource_jeecg" value-ref="dataSource_jeecg" />
				&lt;!&ndash; <entry key="mapdataSource" value-ref="mapdataSource" /> &ndash;&gt;
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource_jeecg" />
	</bean>-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.databaseURL}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="5"/>
        <property name="initialSize" value="1"/>
        <property name="maxIdle" value="2"/>
        <property name="minIdle" value="1"/>
        <property name="maxWait" value="2"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="600"/>
        <property name="logAbandoned" value="true"/>
        <property name="validationQuery" value="SELECT 1"/>
        <property name="testOnBorrow" value="true" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="600000"/>
        <property name="minEvictableIdleTimeMillis" value="900000"/>
    </bean>
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="entityInterceptor" ref="hibernateAspect" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!--<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>-->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
			</props>
		</property>
		<!-- 注解方式配置 -->
		<property name="packagesToScan">
			<list>
                <value>com.ocyd.appfactory.pojo</value>
			</list>
		</property>
	</bean>


	<!-- JDBC配置 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<!-- JDBC配置 -->
	<bean id="namedParameterJdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>

	<!-- 配置事物管理器，在*ServiceImpl里写@Transactional就可以启用事物管理 -->
	<bean name="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
        <property name="dataSource" ref="dataSource"/>
    </bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- JSR303 Validator定义 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
</beans>